{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/companyAuthActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/customer/FrontSearchCar.js","store/actions/carFiltersActions.js","components/customer/FrontPage.js","components/company_cars/CompanyCarSummary.js","components/company_cars/CompanyCarList.js","components/dashboard/Dashboard.js","components/dashboard/CompanyProfile.js","components/company_cars/CompanyCarDetails.js","components/auth/CompanySignIn.js","components/auth/CompanySignUp.js","config/firebaseConfig.js","components/company_cars/AddCompanyCar.js","store/actions/companyCarActions.js","components/customer/SearchCarSummary.js","components/customer/SearchCarList.js","components/customer/SearchCarFilters.js","components/customer/SearchResultPage.js","components/customer/SearchCarDetails.js","store/actions/carBookActions.js","App.js","serviceWorker.js","store/reducers/companyAuthReducer.js","store/reducers/companyCarReducer.js","store/reducers/carFiltersReducer.js","store/reducers/carBookReducer.js","store/reducers/rootReducer.js","index.js"],"names":["connect","dispatch","companySignOut","getState","_ref2","getFirebase","auth","signOut","then","type","props","react_default","a","createElement","NavLink","to","onClick","SignedOutLinks","state","companyAuth","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","className","Link","src","alt","FrontSearchCar","pickupLocation","onPickupLocationChange","e","target","value","_this","setState","onSubmit","preventDefault","this","htmlFor","id","onChange","React","Component","setPickupLocationFilter","FrontPage","FrontSearchCar_FrontSearchCar","data","history","push","pickUpLocation","CompanyCarSummary","_ref","companyCar","carName","carImageURL","companyName","moment","createdAt","toDate","calendar","ProjectList","companyCars","map","key","company_cars_CompanyCarSummary","Dashboard","_this$props","CompanyCarList","Redirect","compose","firestore","ordered","firestoreConnect","collection","companyProfile","profile","headquartersLocation","businessLicenseNo","telephoneNumber","ownProps","match","params","carSeater","carTransmission","carOtherFeatures","CompanySignIn","email","password","handleChange","Object","defineProperty","handleSubmit","companySignIn","companyAuthError","creds","credentials","signInWithEmailAndPassword","catch","err","CompanySignUp","companySignUp","newCompany","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","user","set","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","storage","AddCompanyCar","carImage","handleChangeImage","files","ref","concat","name","put","on","snapshot","error","console","log","child","getDownloadURL","addCompanyCar","accept","companyID","add","locationArea","Date","SearchCarSummary","SearchCarList","customer_SearchCarSummary","CarListFilters","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","pickup","placeholder","carFilters","SearchResultPage","SearchCarFilters","customer_SearchCarList","where","SearchCarDetails","customerName","customerContact","customerEmail","customerPickUpDate","customerPickupTime","customerReturnDate","customerReturnTime","carBooking","lib","header","trigger","href","newBooking","bookCar","objectSpread","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","CompanyCarDetails","CompanyProfile","Boolean","window","location","hostname","initState","companyAuthReducer","arguments","length","undefined","action","message","companyCarReducer","filtersReducerDefaultState","carFiltersReducer","carBookReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","firebaseConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8c158713.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { companySignOut } from '../../store/actions/companyAuthActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n        <div>\r\n                <li><NavLink to=\"/company-dashboard\">Dashboard</NavLink></li>\r\n                <li><NavLink to=\"/company-addcar\">Add New Car</NavLink></li>\r\n                <li><NavLink to=\"/company-profile\">Company Profile</NavLink></li>\r\n                {/* eslint-disable-next-line */}\r\n                <li><a onClick={props.companySignOut}>Log Out</a></li>\r\n        </div>        \r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return  {\r\n        companySignOut: () => dispatch(companySignOut())\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(SignedInLinks)","// company sign in action\r\nexport const companySignIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n        // Firebase Sign In\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(()=>{\r\n            dispatch({ type: 'COMPANY_LOGIN_SUCCESS'});\r\n        }).catch((err) => {\r\n            dispatch({ type: 'COMPANY_LOGIN_ERROR',err});\r\n        });\r\n        \r\n    }\r\n}\r\n\r\n// company sign out action\r\nexport const companySignOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase= getFirebase();\r\n        //Firebase Sign Out\r\n        firebase.auth().signOut().then(()=> {\r\n            dispatch({type: 'COMPANY_SIGNOUT_SUCCESS'});\r\n        });\r\n    }\r\n}\r\n\r\n// company sign up action\r\nexport const companySignUp = (newCompany) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newCompany.email,\r\n            newCompany.password\r\n        ).then((resp) => {\r\n            return firestore.collection('companies').doc(resp.user.uid).set({\r\n                companyName: newCompany.companyName,\r\n                headquartersLocation: newCompany.headquartersLocation,\r\n                telephoneNumber: newCompany.telephoneNumber,\r\n                businessLicenseNo: newCompany.businessLicenseNo\r\n            })\r\n        }).then(() => {\r\n            dispatch({ type: 'COMPANY_SIGNUP_SUCCESS'})\r\n        }).catch((err) => {\r\n            dispatch({ type: 'COMPANY_SIGNUP_ERROR',err})\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = (props) => {\r\n    return (\r\n        <div>\r\n                <li><NavLink to=\"/company-signup\">Company Sign Up</NavLink></li>\r\n                <li><NavLink to=\"/company-signin\">Company Login</NavLink></li>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default (SignedOutLinks)","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst Navbar = (props) => {\r\n    const { companyAuth } = props;\r\n    // console.log(companyAuth);\r\n    const links =  companyAuth.uid ? <SignedInLinks /> : <SignedOutLinks/>\r\n    return (\r\n        <div>\r\n            <nav className=\"nav-wrapper yellow darken-3\">\r\n                <div className=\"container\">\r\n                    <Link to='/' className=\"brand-logo hide-on-med-and-down\"><img src=\"/img/logoHeader.png\" alt=\"CatchCar.com Navbar Logo\"></img></Link>\r\n                    <ul className=\"right \">{links}</ul>\r\n                </div>\r\n            </nav>         \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    // console.log(state)\r\n    return {\r\n        companyAuth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react';\r\n\r\nexport default class FrontSearchCar extends React.Component{\r\n    state= {\r\n\r\n        pickupLocation: ''\r\n    }\r\n\r\n    onPickupLocationChange= (e) => {\r\n        const pickupLocation= e.target.value;\r\n        this.setState(() => ({pickupLocation}));\r\n    }\r\n\r\n    onSubmit= (e) => {\r\n        e.preventDefault();\r\n        this.props.onSubmit({\r\n            pickupLocation: this.state.pickupLocation\r\n        });\r\n        // console.log(\"Submit\");\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"center\">\r\n                <form onSubmit={this.onSubmit} >\r\n                    <div  className=\"center\">\r\n                        <img className=\"circular_img\" src=\"/img/catchcar.png\" alt=\"CatchCar Main Logo\"/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label  htmlFor=\"pickupLocation\">Pickup Place</label>\r\n                        <input type=\"text\" id=\"pickupLocation\" className=\"text-white\" onChange={this.onPickupLocationChange}/>\r\n                    </div>\r\n                    <button className=\"btn orange lighten-1 z-depth-0\">Find cars</button>\r\n                </form>\r\n            </div>  \r\n        )\r\n    }\r\n}\r\n\r\n","\r\n//SET_PICKUP_LOCATION_FILTER\r\nexport const setPickupLocationFilter= (pickupLocation) => {\r\n    return (dispatch, getState) =>{\r\n        dispatch({type: 'SET_PICKUP_LOCATION_FILTER',pickupLocation});\r\n    }\r\n    \r\n};","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport FrontSearchCar from './FrontSearchCar'\r\nimport { setPickupLocationFilter } from '../../store/actions/carFiltersActions';\r\n\r\nclass FrontPage extends Component {\r\n    render(){\r\n        return (\r\n            <div className=\"dashboard container frontpage\">\r\n                <FrontSearchCar onSubmit={(data)=>{\r\n                    this.props.setPickupLocationFilter(data.pickupLocation);\r\n                    this.props.history.push('/searchresult');\r\n                }}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setPickupLocationFilter: (pickUpLocation) => dispatch(setPickupLocationFilter(pickUpLocation))\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(FrontPage);","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst CompanyCarSummary = ({companyCar}) =>{\r\n    return(\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{companyCar.carName}</span>\r\n                <img className=\"car-img\" src={companyCar.carImageURL} alt=\"Car\"/>\r\n                <p>{companyCar.companyName}</p>\r\n                <p className=\"grey-text\">Posted on {moment(companyCar.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CompanyCarSummary","import React from 'react'\r\nimport CompanyCarSummary from './CompanyCarSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProjectList = ({companyCars}) => {\r\n    return (\r\n        <div className=\"project-list section\">\r\n            { \r\n                companyCars && companyCars.map(companyCar => {\r\n                    return (\r\n                        <Link to={'/companyCar/' + companyCar.id} key={companyCar.id}>\r\n                            <CompanyCarSummary companyCar={companyCar}/>\r\n                        </Link>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList","import React, { Component } from 'react'\r\nimport CompanyCarList from '../company_cars/CompanyCarList'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n    render(){\r\n        const { companyCars, companyAuth }=this.props;\r\n\r\n        if(!companyAuth.uid)\r\n            return <Redirect to='/company-signin' />\r\n\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 \">\r\n                        <CompanyCarList companyCars= {companyCars}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {    \r\n    return {\r\n        companyCars: state.firestore.ordered.companyCars,\r\n        companyAuth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { \r\n            collection: 'companyCars'\r\n        }\r\n    ])\r\n)(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst CompanyProfile = (props) => {\r\n    const { companyAuth, companyProfile } = props;\r\n\r\n    if(!companyAuth.uid)\r\n        return <Redirect to='/company-signin' />\r\n    \r\n    return (\r\n        <div className=\"container profile center\">\r\n            <h5>Company Profile</h5>\r\n            <div>\r\n                <p className=\"font-bold\">Company Name: </p>\r\n                <p>{companyProfile.companyName}</p>\r\n            </div>\r\n            <div>\r\n                <p className=\"font-bold\">Headquarters Location: </p>\r\n                <p>{companyProfile.headquartersLocation}</p>\r\n            </div>\r\n            <div>\r\n                <p className=\"font-bold\">Business License No: </p>\r\n                <p>{companyProfile.businessLicenseNo}</p>\r\n            </div>\r\n            <div>\r\n                <p className=\"font-bold\">Telephone Number: </p>\r\n                <p>{companyProfile.telephoneNumber}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    // console.log(state)\r\n    return {\r\n        companyAuth: state.firebase.auth,\r\n        companyProfile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CompanyProfile)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst CompanyCarDetails= (props) => {\r\n    const { companyCar, companyAuth } = props;\r\n\r\n    if(!companyAuth.uid)\r\n        return <Redirect to='/company-signin' />\r\n\r\n    if ( companyCar) {\r\n        return(\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                    <img className=\"car-img\" src={companyCar.carImageURL} alt=\"Car\"/>\r\n                        <span className=\"card-title\">{ companyCar.carName }</span>\r\n                        <p>Number of Seats: {companyCar.carSeater}</p>\r\n                        <p>Transmission   : {companyCar.carTransmission}</p>\r\n                        <p>Other features : {companyCar.carOtherFeatures}</p>\r\n                    </div>\r\n                    <div className=\"card-action grey lighten-4 grey-text\">\r\n                        <div>By {companyCar.companyName}</div>\r\n                        <div>Posted on {moment(companyCar.createdAt.toDate()).calendar()}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }else{\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading Company Cars. . .</p>\r\n            </div>\r\n        )\r\n    }  \r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id= ownProps.match.params.id;\r\n    const companyCars= state.firestore.data.companyCars;\r\n    const companyCar = companyCars ? companyCars[id]: null\r\n    return {\r\n        companyCar: companyCar,\r\n        companyAuth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'companyCars' }\r\n    ])\r\n)(CompanyCarDetails)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { companySignIn } from '../../store/actions/companyAuthActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CompanySignIn extends Component {\r\n    state={\r\n        email:'',\r\n        password: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit=(e) => {\r\n        e.preventDefault();\r\n        this.props.companySignIn(this.state);\r\n    }\r\n    \r\n    render() {\r\n        const { companyAuthError, companyAuth } = this.props;\r\n\r\n        if(companyAuth.uid)\r\n            return <Redirect to='/company-dashboard' />\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label  htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label  htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn orange lighten-1 z-depth-0\">Login</button>\r\n                        <div className=\"red-text center\">\r\n                            { companyAuthError ? <p>{companyAuthError}</p>: null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        companyAuthError: state.companyAuth.companyAuthError,\r\n        companyAuth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        companySignIn: (creds) => dispatch(companySignIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CompanySignIn) ","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { companySignUp } from '../../store/actions/companyAuthActions'\r\n\r\nclass CompanySignUp extends Component {\r\n    state={\r\n        email:'',\r\n        password: '',\r\n        companyName:'',\r\n        headquartersLocation:'',\r\n        telephoneNumber:'',\r\n        businessLicenseNo:''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit=(e) => {\r\n        e.preventDefault();\r\n        this.props.companySignUp(this.state);\r\n    }\r\n    \r\n    render() {\r\n        const { companyAuth, companyAuthError } = this.props;\r\n\r\n        if(companyAuth.uid)\r\n            return <Redirect to='/company-dashboard' />\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label  htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label  htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label  htmlFor=\"companyName\">Company Name</label>\r\n                        <input type=\"text\" id=\"companyName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label  htmlFor=\"headquartersLocation\">Headquarters Location City (e.g Gelugor)</label>\r\n                        <input type=\"text\" id=\"headquartersLocation\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label  htmlFor=\"telephoneNumber\">Telephone Number</label>\r\n                        <input type=\"text\" id=\"telephoneNumber\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label  htmlFor=\"businessLicenseNo\">Business License No</label>\r\n                        <input type=\"text\" id=\"businessLicenseNo\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn orange lighten-1 z-depth-0\">Login</button>\r\n                        <div className=\"red-text center\">\r\n                            { companyAuthError ? <p>{companyAuthError}</p>: null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        companyAuth: state.firebase.auth,\r\n        companyAuthError: state.companyAuth.companyAuthError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        companySignUp: (newCompany) => dispatch(companySignUp(newCompany))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CompanySignUp) ","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\nimport 'firebase/storage'\r\n\r\nvar config = {\r\n    apiKey: \"AIzaSyD_5JION_g1WEWavcZC-5mzQ7nAt1qbKxk\",\r\n    authDomain: \"catchcarv4.firebaseapp.com\",\r\n    databaseURL: \"https://catchcarv4.firebaseio.com\",\r\n    projectId: \"catchcarv4\",\r\n    storageBucket: \"catchcarv4.appspot.com\",\r\n    messagingSenderId: \"327590431776\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\nfirebase.firestore().settings({ timestampsInSnapshots: true});\r\n\r\nconst storage = firebase.storage();\r\nexport {\r\n    storage,firebase as default\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addCompanyCar } from '../../store/actions/companyCarActions'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { storage } from '../../config/firebaseConfig'\r\n\r\nclass AddCompanyCar extends Component {\r\n    state={\r\n        carImage:null,\r\n        carImageURL:'',\r\n        carName:'',\r\n        carSeater: '',\r\n        carTransmission:'',\r\n        carOtherFeatures: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleChangeImage= (e) => {\r\n        if(e.target.files[0]){\r\n            const carImage = e.target.files[0];\r\n            //console.log( \"carImage \" +carImage)\r\n            const { companyAuth } = this.props;\r\n            this.setState(()=>({carImage}));\r\n            //const { carImage } = this.state;\r\n            const uploadTask= storage.ref(`carImages/${companyAuth.uid}/${carImage.name}`).put(carImage);\r\n            uploadTask.on('state_changed',\r\n                (snapshot) => {\r\n    \r\n                },(error) => {\r\n                    console.log(error);\r\n                },() => {\r\n                    storage.ref(`carImages/${companyAuth.uid}`).child(carImage.name).getDownloadURL().then(carImageURL => {\r\n                        console.log(carImageURL);\r\n                        this.setState({carImageURL});\r\n                    }).then(() => {\r\n                        console.log(\"image upload successfully\");\r\n                    })\r\n                    \r\n                });\r\n        }\r\n    }\r\n    handleSubmit=(e) => {\r\n        e.preventDefault();\r\n        //console.log(this.state)\r\n        this.props.addCompanyCar(this.state)\r\n        this.props.history.push('/company-dashboard');\r\n    }\r\n    \r\n    render() {\r\n        const { companyAuth } = this.props;\r\n        //console.log(this.props);\r\n        if(!companyAuth.uid)\r\n            return <Redirect to='/company-signin' />\r\n        return(\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Add New Car</h5>\r\n                    <div className=\"file-field input-field\">\r\n                        <div className=\"btn orange lighten-1 z-depth-0\">\r\n                            <span>Upload Car Image</span>\r\n                            <input type=\"file\" id=\"carImage\" accept=\"image/*\" onChange={this.handleChangeImage} />\r\n                        </div>\r\n                        <div className=\"file-path-wrapper\">\r\n                            <input className=\"file-path validate\" type=\"text\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label  htmlFor=\"carName\">Car Name</label>\r\n                        <input type=\"text\" id=\"carName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label  htmlFor=\"carSeater\">No of Car Seats</label>\r\n                        <input type=\"text\" id=\"carSeater\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label  htmlFor=\"carTransmission\">Car Transmission</label>\r\n                        <input type=\"text\" id=\"carTransmission\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label  htmlFor=\"carOtherFeatures\">Other Features</label>\r\n                        <textarea id=\"carOtherFeatures\" className=\"materialize-textarea\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn orange lighten-1 z-depth-0\">Add Car</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {    \r\n    return {\r\n        companyAuth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addCompanyCar: (companyCar) => dispatch(addCompanyCar(companyCar))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(AddCompanyCar) ","export const addCompanyCar = (companyCar) => {\r\n    return(dispatch, getState, { getFirebase, getFirestore }) => {\r\n        // make async call to database\r\n        const firestore=  getFirestore();\r\n        const companyProfile = getState().firebase.profile;\r\n        const companyID = getState().firebase.auth.uid;\r\n        firestore.collection('companyCars').add({\r\n            //...companyCar,\r\n            carName: companyCar.carName,\r\n            carSeater: companyCar.carSeater,\r\n            carTransmission: companyCar.carTransmission,\r\n            carOtherFeatures: companyCar.carOtherFeatures,\r\n            carImageURL: companyCar.carImageURL,\r\n            companyName: companyProfile.companyName,\r\n            companyID: companyID,\r\n            locationArea: companyProfile.headquartersLocation,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({type: 'ADD_COMPANY_CAR',companyCar});\r\n        }).catch((err) => {\r\n            dispatch({type: 'ADD_COMPANY_CAR_ERROR',err});\r\n        })\r\n        \r\n    }\r\n};","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst SearchCarSummary = ({companyCar}) =>{\r\n    return(\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <img className=\"car-img\" src={companyCar.carImageURL} alt=\"Car\"></img>\r\n                <span className=\"card-title\">{companyCar.carName}</span>\r\n                <p>{companyCar.companyName}</p>\r\n                <p>Pickup Location: {companyCar.locationArea}</p>\r\n                <p className=\"grey-text\">Posted on {moment(companyCar.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchCarSummary","import React from 'react'\r\nimport SearchCarSummary from './SearchCarSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst SearchCarList = ({companyCars}) => {\r\n    return (\r\n        <div className=\"project-list section\">\r\n            { \r\n                companyCars && companyCars.map(companyCar => {\r\n                    return (\r\n                        <Link to={'/searchresult/' + companyCar.id} key={companyCar.id}>\r\n                            <SearchCarSummary companyCar={companyCar}/>\r\n                        </Link>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchCarList","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setPickupLocationFilter } from '../../store/actions/carFiltersActions';\r\n\r\nclass CarListFilters extends React.Component{\r\n    constructor (props){\r\n        super(props);\r\n        this.state ={\r\n            pickUpLocation:props.pickup\r\n        };\r\n    }\r\n    \r\n\r\n    onPickupLocationChange = (e) =>{\r\n        const pickUpLocation= e.target.value;\r\n        this.setState(()=> ({pickUpLocation}));\r\n    };\r\n\r\n\r\n    onSubmit = (e) =>{\r\n        e.preventDefault();\r\n        this.props.setPickupLocationFilter(this.state.pickUpLocation);\r\n    };\r\n\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"carlistfilters\">\r\n                <form onSubmit={this.onSubmit} >\r\n                    <div className=\"row\">\r\n                        <div className=\"col s12\">\r\n                            <div className=\"input-field inline\">\r\n                                <input \r\n                                    type=\"text\"\r\n                                    id=\"pickupLocation\" \r\n                                    className=\"text-white\"\r\n                                    value={this.state.pickUpLocation}\r\n                                    onChange= {this.onPickupLocationChange}\r\n                                    placeholder=\"Pickup Place\"\r\n                                />\r\n                            </div>\r\n                        <button className=\"btn orange lighten-1 z-depth-0 \">Find cars</button>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setPickupLocationFilter: (pickUpLocation) => dispatch(setPickupLocationFilter(pickUpLocation))\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        pickup: state.carFilters.pickupLocation\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CarListFilters);","import React, { Component } from 'react'\r\nimport SearchCarList from '../customer/SearchCarList'\r\nimport SearchCarFilters from '../customer/SearchCarFilters'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\n\r\nclass SearchResultPage extends Component {\r\n    render(){\r\n        const { companyCars }=this.props;\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <SearchCarFilters />\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 \">\r\n                        <SearchCarList companyCars= {companyCars}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    // console.log(state.carFilters.pickupLocation);    \r\n    return {\r\n        companyCars: state.firestore.ordered.companyCars,\r\n        pickupLocation: state.carFilters.pickupLocation\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect(pickupLocation =>[\r\n        { \r\n            collection: 'companyCars',\r\n            where:[\r\n                ['locationArea', '==', pickupLocation.pickupLocation]\r\n            ]\r\n        }\r\n    ])\r\n)(SearchResultPage)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport {Button, Modal, Row, Input} from 'react-materialize'\r\nimport moment from 'moment'\r\nimport { carBooking } from '../../store/actions/carBookActions'\r\n\r\n\r\nclass SearchCarDetails extends Component {\r\n    state ={\r\n        customerName:'',\r\n        customerContact:'',\r\n        customerEmail:'',\r\n        customerPickUpDate:'',\r\n        customerPickupTime:'',\r\n        customerReturnDate:'',\r\n        customerReturnTime:''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit=(e) => {\r\n        e.preventDefault();\r\n        this.props.carBooking(this.state);\r\n    }\r\n\r\n\r\n    render(){\r\n        const { companyCar } = this.props;\r\n\r\n        if ( companyCar) {\r\n            return(\r\n                <div className=\"container section project-details\">\r\n                    <div className=\"card z-depth-0\">\r\n                        <div className=\"card-content\">\r\n                            <img className=\"car-img\" src={companyCar.carImageURL} alt=\"Car\"/>\r\n                            <span className=\"card-title\">{ companyCar.carName }</span>\r\n                            <p>Number of Seats: {companyCar.carSeater}</p>\r\n                            <p>Transmission   : {companyCar.carTransmission}</p>\r\n                            <p>Other features : {companyCar.carOtherFeatures}</p>\r\n                            <Modal\r\n                                header='Booking Information'\r\n                                trigger={<Button>BOOK NOW !</Button>}>\r\n                                <form onSubmit={this.handleSubmit}>\r\n                                <div className=\"input-field\">\r\n                                    <label  htmlFor=\"customerName\">Your Name</label>\r\n                                    <input type=\"text\" id=\"customerName\" onChange={this.handleChange}/>\r\n                                </div>\r\n                                <div className=\"input-field\">\r\n                                    <label  htmlFor=\"customerContact\">Contact No</label>\r\n                                    <input type=\"tel\" id=\"customerContact\" onChange={this.handleChange}/>\r\n                                </div>\r\n                                <div className=\"input-field\">\r\n                                    <label  htmlFor=\"customerEmail\">Email</label>\r\n                                    <input type=\"email\" id=\"customerEmail\" onChange={this.handleChange}/>\r\n                                </div>\r\n                                <div className=\"input-field\">\r\n                                    <label  htmlFor=\"customerPickupDate\">Pickup Date</label>\r\n                                    <input type=\"date\" id=\"customerPickupDate\" onChange={this.handleChange}/>\r\n                                </div>\r\n                                <div className=\"input-field\">\r\n                                    <label  htmlFor=\"customerPickupTime\">Pickup Time</label>\r\n                                    <input type=\"time\" id=\"customerPickupTime\" onChange={this.handleChange}/>\r\n                                </div>\r\n                                <div className=\"input-field\">\r\n                                    <label  htmlFor=\"customerReturnDate\">Return Date</label>\r\n                                    <input type=\"date\" id=\"customerReturnDate\" onChange={this.handleChange}/>\r\n                                </div>\r\n                                <div className=\"input-field\">\r\n                                    <label  htmlFor=\"customerReturnTime\">Return Time</label>\r\n                                    <input type=\"time\" id=\"customerReturnTime\" onChange={this.handleChange}/>\r\n                                </div>\r\n                                \r\n\r\n                            \r\n\r\n                                <button href='#' className=\"btn orange lighten-1 z-depth-0\">Submit</button>\r\n                                </form>\r\n                            </Modal>\r\n                        </div>\r\n                        <div className=\"card-action grey lighten-4 grey-text\">\r\n                            <div>By {companyCar.companyName}</div>\r\n                            <div>Posted on {moment(companyCar.createdAt.toDate()).calendar()}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }else{\r\n            return (\r\n                <div className=\"container center\">\r\n                    <p>Loading Company Cars. . .</p>\r\n                </div>\r\n            )\r\n        }  \r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id= ownProps.match.params.id;\r\n    const companyCars= state.firestore.data.companyCars;\r\n    const companyCar = companyCars ? companyCars[id]: null\r\n    return {\r\n        companyCar: companyCar\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        carBooking: (newBooking) => dispatch(carBooking(newBooking))\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps ),\r\n    firestoreConnect([\r\n        { collection: 'companyCars' }\r\n    ])\r\n)(SearchCarDetails)\r\n\r\n","export const carBooking = (bookCar) => {\r\n    return(dispatch, getState, {getFirebase, getFirestore }) => {\r\n        const firestore=  getFirestore();\r\n        firestore.collection('carBooked').add({\r\n            ...bookCar\r\n        }).then(() => {\r\n            dispatch({type: 'ADD_BOOK_CAR', bookCar});\r\n        }).catch((err) => {\r\n            dispatch({type: 'ADD_BOOK_CAR_ERROR', err});\r\n        })\r\n        }\r\n       \r\n};","import React, { Component } from 'react'\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\nimport Navbar from './components/layout/Navbar'\r\nimport FrontPage from './components/customer/FrontPage'\r\nimport Dashboard from './components/dashboard/Dashboard'\r\nimport CompanyProfile from './components/dashboard/CompanyProfile'\r\nimport CompanyCarDetails from './components/company_cars/CompanyCarDetails'\r\nimport CompanySignIn from './components/auth/CompanySignIn'\r\nimport CompanySignUp from './components/auth/CompanySignUp'\r\nimport AddCompanyCar from './components/company_cars/AddCompanyCar'\r\nimport SearchResultPage from './components/customer/SearchResultPage' \r\nimport SearchCarDetails from './components/customer/SearchCarDetails'\r\n\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"App\">\r\n          <Navbar />\r\n          <Switch>\r\n            <Route exact path='/' component={FrontPage} />\r\n            <Route path='/companyCar/:id' component={CompanyCarDetails} />\r\n            <Route exact path='/searchresult/:id' component={SearchCarDetails} />\r\n            <Route path='/company-dashboard' component={Dashboard} />\r\n            <Route path='/company-signin' component={CompanySignIn} />\r\n            <Route path='/company-signup' component={CompanySignUp} />\r\n            <Route path='/company-profile' component={CompanyProfile} />\r\n            <Route path='/company-addcar' component={AddCompanyCar} />\r\n            <Route path='/searchresult' component={SearchResultPage} />\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    companyAuthError: null\r\n}\r\n\r\nconst companyAuthReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'COMPANY_LOGIN_ERROR':\r\n            console.log('login error');\r\n            return {\r\n                ...state,\r\n                companyAuthError: 'Login Failed'\r\n            }\r\n        case 'COMPANY_LOGIN_SUCCESS':\r\n            console.log('login success');\r\n            return {\r\n                ...state,\r\n                companyAuthError: null\r\n            }\r\n        case 'COMPANY_SIGNOUT_SUCCESS':\r\n            console.log('signout success');\r\n            return {\r\n                ...state,\r\n                companyAuthError: null\r\n            }\r\n        case 'COMPANY_SIGNUP_ERROR':\r\n            console.log('signup error');\r\n            return {\r\n                ...state,\r\n                companyAuthError: action.err.message\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default companyAuthReducer","const initState = {\r\n    companyCars: [\r\n        {id: '1', carName: 'Proton Saga', carSeater:'4', carTransmission:'Manual', carOtherFeatures:'Free half petrol tank'},\r\n        {id: '2', carName: 'Honda City', carSeater:'4', carTransmission:'Auto', carOtherFeatures:'Eco-Car, petrol save'},\r\n        {id: '3', carName: 'Perodua Kancil', carSeater:'4', carTransmission:'Manual', carOtherFeatures:'Small, but fast LOL'}\r\n    ]\r\n}\r\n\r\nconst companyCarReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'ADD_COMPANY_CAR':\r\n            console.log('add new car success',action.companyCar);\r\n            return state;\r\n        case 'ADD_COMPANY_CAR_ERROR':\r\n            console.log('add new car error', action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default companyCarReducer","//Filters Reducer\r\nconst filtersReducerDefaultState = {\r\n    pickupLocation: ''\r\n};\r\n\r\nconst carFiltersReducer= (state= filtersReducerDefaultState,action) =>{\r\n    switch(action.type){\r\n        case 'SET_PICKUP_LOCATION_FILTER':\r\n            console.log(\"set location\");\r\n            return {\r\n                ...state,\r\n                pickupLocation: action.pickupLocation\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default carFiltersReducer;","const initState = {}\r\n\r\nconst carBookReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'ADD_BOOK_CAR' :\r\n            console.log('add book car success', action.bookCar);\r\n            return state;\r\n        case 'ADD_BOOK_CAR_ERROR' :\r\n            console.log('add book car error', action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default carBookReducer","import companyAuthReducer from './companyAuthReducer'\r\nimport companyCarReducer from './companyCarReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\nimport carFiltersReducer from './carFiltersReducer'\r\nimport carBookReducer from './carBookReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    carFilters: carFiltersReducer,\r\n    companyAuth: companyAuthReducer,\r\n    companyCar: companyCarReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer,\r\n    bookCar: carBookReducer\r\n});\r\n\r\nexport default rootReducer","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport rootReducer from './store/reducers/rootReducer'\r\nimport { Provider } from 'react-redux'\r\nimport thunk from 'redux-thunk'\r\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\r\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\r\nimport firebaseConfig from './config/firebaseConfig'\r\n\r\nconst store = createStore(rootReducer,\r\n    compose(\r\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore})),\r\n        reduxFirestore(firebaseConfig),\r\n        reactReduxFirebase(\r\n            firebaseConfig, \r\n            {\r\n                useFirestoreForProfile: true,\r\n                userProfile: 'companies', \r\n                attachAuthIsReady: true\r\n            }\r\n        )\r\n    )\r\n);\r\n\r\nstore.firebaseAuthIsReady.then(() => {\r\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n    serviceWorker.unregister();\r\n})"],"sourceRoot":""}